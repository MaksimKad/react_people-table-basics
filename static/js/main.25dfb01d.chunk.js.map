{"version":3,"sources":["components/Loader/HomePage.tsx","components/Loader/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/Loader/PersonLink.tsx","components/Loader/PeopleTable.tsx","components/Loader/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","personParent","undefined","classNames","sex","to","slug","name","PeopleTable","people","useParams","length","map","born","died","mother","motherName","father","fatherName","preparePeopleArray","reduce","newPeopleArray","currentPerson","find","PeoplePage","useState","setPeople","loading","setLoading","errorMsg","setErrorMsg","useEffect","fetchPeople","finally","App","pathname","useLocation","replace","role","isActive","element","path","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.25dfb01d.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage = (): React.ReactElement => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","import React from 'react';\n\nexport const NotFoundPage = (): React.ReactElement => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { ReactElement } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person?: Person;\n  personParent?: string | null;\n};\n\nexport const PersonLink = ({\n  person,\n  personParent,\n}: PersonLinkProps): ReactElement => {\n  if (person === undefined) {\n    return (\n      <>\n        {personParent || '-'}\n      </>\n    );\n  }\n\n  return (\n    <Link\n      className={classNames({ 'has-text-danger': person?.sex === 'f' })}\n      to={`/people/${person?.slug}`}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { ReactElement } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\ntype PeopleTableProps = {\n  people?: Person[] | null;\n};\n\nexport const PeopleTable = ({ people }: PeopleTableProps): ReactElement => {\n  const { slug } = useParams();\n\n  if (people?.length === 0) {\n    return <p data-cy=\"noPeopleMessage\">There are no people on the server</p>;\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map((person) => (\n          <tr\n            className={classNames({\n              'has-background-warning': slug === person.slug,\n            })}\n            data-cy=\"person\"\n            key={person.slug}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              <PersonLink\n                person={person.mother}\n                personParent={person.motherName}\n              />\n            </td>\n            <td>\n              <PersonLink\n                person={person.father}\n                personParent={person.fatherName}\n              />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { getPeople } from '../../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../../types/Person';\n\nconst preparePeopleArray = (people: Person[]) => {\n  return people?.reduce((newPeopleArray: Person[], currentPerson) => {\n    const mother = people?.find(\n      (person) => person.name === currentPerson.motherName,\n    );\n    const father = people?.find(\n      (person) => person.name === currentPerson.fatherName,\n    );\n\n    return [...newPeopleArray, { ...currentPerson, mother, father }];\n  }, []);\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setLoading(true);\n      try {\n        const response = await getPeople();\n\n        return preparePeopleArray(response);\n      } catch {\n        setErrorMsg('Unable to load people');\n\n        return null;\n      }\n    };\n\n    fetchPeople()\n      .then(setPeople)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && <Loader />}\n\n          {errorMsg && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMsg}\n            </p>\n          )}\n\n          {!errorMsg && !loading && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Route,\n  Routes,\n  NavLink,\n  useLocation,\n  Navigate,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport React from 'react';\nimport { HomePage } from './components/Loader/HomePage';\nimport { NotFoundPage } from './components/Loader/NotFoundPage';\nimport { PeoplePage } from './components/Loader/PeoplePage';\n\nexport const App = (): React.ReactElement => {\n  const { pathname } = useLocation();\n\n  return (\n    <div data-cy=\"app\">\n      {pathname === '/home' && <Navigate to=\"/\" replace />}\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => `navbar-item${isActive ? ' has-background-grey-lighter' : ''}`}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => `navbar-item${isActive ? ' has-background-grey-lighter' : ''}`}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route element={<HomePage />} path=\"/\" />\n\n            <Route element={<PeoplePage />} path=\"people\" />\n            <Route element={<PeoplePage />} path=\"people/:slug\" />\n\n            <Route element={<NotFoundPage />} path=\"*\" />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}